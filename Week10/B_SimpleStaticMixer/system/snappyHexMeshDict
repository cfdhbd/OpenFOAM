/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    inlet{type searchableDisk; origin (0.05 0.05 0); normal (0 0 1); radius 0.05;}
    outlet{type searchableDisk; origin (0.05 0.05 0.5); normal (0 0 1); radius 0.05;}
    walls{type searchableCylinder; point1 (0.05 0.05 0); point2 (0.05 0.05 0.5); radius 0.05;}
    plate1{type searchableBox; min (0 0 0.1); max (0.07 0.1 0.102);}
    plate2{type searchableBox; min (0.03 0 0.15); max (0.1 0.1 0.152);}
    plate3{type searchableBox; min (0 0 0.2); max (0.07 0.1 0.202);}
    plate4{type searchableBox; min (0.03 0 0.25); max (0.1 0.1 0.252);}
    plate5{type searchableBox; min (0 0 0.3); max (0.07 0.1 0.302);}
    plate6{type searchableBox; min (0.03 0 0.35); max (0.1 0.1 0.352);}
    plate7{type searchableBox; min (0 0 0.4); max (0.07 0.1 0.402);}
}

castellatedMeshControls
{
    maxLocalCells 100000;
    maxGlobalCells 2000000;
    minRefinementCells 100;
    nCellsBetweenLevels 2;
    features ();

    refinementSurfaces
    {
        "plate.*"
        {
            level (0 2); patchInfo {type wall;}
        }
        walls
        {
            level (0 1); patchInfo {type wall;}
        }
        inlet
        {
            level (0 0); patchInfo {type patch;}
        }
        outlet
        {
            level (0 0); patchInfo {type patch;}
        }
    }

    resolveFeatureAngle 30;

    refinementRegions
    {
	walls
	{
	    mode inside;
            levels ((0 1));
	}
    }

    locationInMesh (0.05 0.05 0.001);

    allowFreeStandingZoneFaces false;
}

snapControls
{
    nSmoothPatch 3;
    tolerance 2.0;
    nSolveIter 30;
    nRelaxIter 5;
        nFeatureSnapIter 10;
        implicitFeatureSnap true;
        explicitFeatureSnap false;
}


addLayersControls
{
    relativeSizes true;

    layers
    {
        //"plate.*" {nSurfaceLayers 5;}
        //walls {nSurfaceLayers 5;}
    }

    expansionRatio 1;
    finalLayerThickness 0.1;
    minThickness 0.01;
    nGrow 0;
    featureAngle 30;
    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.01;
    maxThicknessToMedialRatio 0.01;
    minMedianAxisAngle 130;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}



// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    #include "meshQualityDict"

    // Advanced

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- Amount to scale back displacement at error points
    errorReduction 0.75;
}


// Advanced

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
